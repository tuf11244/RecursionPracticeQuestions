//https://www.geeksforgeeks.org/sort-a-stack-using-recursion/
import java.util.Stack;
public class Main
{
	public static void main(String[] args) {
		System.out.println("Hello World");
	    Stack<Integer> stack = new Stack<>();
	    stack.push(30);
	    stack.push(-5);
	    stack.push(18);
	    stack.push(14);
	    stack.push(-3);
	    
	    System.out.println("Original Stack: " + stack);
        System.out.println("Sorted Stack: " + sortStack(stack));
		
	}
	public static Stack<Integer> sortStack(Stack<Integer> stack){
	    if(stack.size() == 0  || stack.size() ==1){
	        return stack;
	    }
	    if(!stack.isEmpty()){
	        int temp = stack.pop();
	        sortStack(stack);
	        insert(stack,temp);
	    }
	    return stack;
	}
	public static void insert(Stack<Integer> stack, int temp){
	    if(stack.size() == 0 || stack.peek() <= temp){
	        stack.push(temp);
	        return;
	    }
	    int LastElement = stack.pop();
	    insert(stack,temp);
	    stack.push(LastElement);
	    return;
	}
	
}
